png(file="notitle.png",width=400, height=350)
par(mar=c(5,3,2,2)+0.1)
hist(rnorm(100),ylab=NULL,main=NULL)
dev.off()
width=400, height=350
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
library(ggplot2)
install.packages("ggplot2")
install.packages("knitr")
install.packages("ggplot2")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
activity <- read.csv("activity.csv")
activity <- read.csv("activity.csv")
activity$day <- weekdays(as.Date(activity$date))
activity$DateTime<- as.POSIXct(activity$date, format="%Y-%m-%d")
##pulling data without nas
clean <- activity[!is.na(activity$steps),]
## summarizing total steps per date
TotalSteps <- aggregate(activity$steps ~ activity$date, FUN=sum, )
colnames(TotalSteps)<- c("Date", "Steps")
## Creating the historgram of total steps per day
jpg(file="TotalSteps.jpg", width=400, height=350)
## summarizing total steps per date
TotalSteps <- aggregate(activity$steps ~ activity$date, FUN=sum, )
colnames(TotalSteps)<- c("Date", "Steps")
## Creating the historgram of total steps per day
jpeg(file="TotalSteps.jpg", width=400, height=350)
hist(TotalSteps$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day")
dev.off()
## Mean of Steps
MeanSteps <- as.integer(mean(TotalSteps $Steps))
MeanSteps
## summarizing total steps per date
TotalSteps <- aggregate(activity$steps ~ activity$date, FUN=sum, )
colnames(TotalSteps)<- c("Date", "Steps")
## Creating the historgram of total steps per day
hist(TotalSteps$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day")
MedianSteps <- as.integer(median(TotalSteps$Steps))
MedianSteps
MedianSteps <- as.integer(median(TotalSteps$Steps))
MedianSteps
library(plyr)
library(ggplot2)
##pulling data without nas
clean <- activity[!is.na(activity$steps),]
##create average number of steps per interval
AveStepInterval <- ddply(clean, .(interval), summarize, Avg = mean(steps))
##Create line plot of average number of steps per interval
p <- ggplot(AveStepInterval, aes(x=interval, y=Avg), xlab = "Interval", ylab="Average Number of Steps")
p + geom_line()+xlab("Interval")+ylab("Average Number of Steps")+ggtitle("Average Number of Steps per Interval")
##Create line plot of average number of steps per interval
jpeg(file = "AveStepsInterval",width=400, height=350)
p <- ggplot(AveStepInterval, aes(x=interval, y=Avg), xlab = "Interval", ylab="Average Number of Steps")
p + geom_line()+xlab("Interval")+ylab("Average Number of Steps")+ggtitle("Average Number of Steps per Interval")
dev.off()
##Maximum steps by interval
maxSteps <- max(AveStepInterval$Avg)
##Which interval contains the maximum average number of steps
AveStepInterval[AveStepInterval$Avg==maxSteps,1]
##Number of NAs in original data set
nrow(activity[is.na(activity$steps),])
## Create the average number of steps per weekday and interval
AveStepInterval <- ddply(clean, .(interval, day), summarize, Avg = mean(steps))
## Create dataset with all NAs for substitution
NAdata<- activity[is.na(activity$steps),]
## Merge NA data with average weekday interval for substitution
Newdata<-merge(NAdata, AveStepInterval, by=c("interval", "day"))
## Reorder the new substituded data in the same format as clean data set
NewData2<- Newdata[,c(6,4,1,2,5)]
colnames(NewData2)<- c("steps", "date", "interval", "day", "DateTime")
##Merge the NA averages and non NA data together
MergeData <- rbind(clean, NewData2)
##Create sum of steps per date to compare with step 1
TotalSteps2 <- aggregate(MergeData$steps ~ MergeData$date, FUN=sum, )
colnames(TotalSteps2)<- c("Date", "Steps")
## Mean of Steps with NA data taken care of
MeanSteps2 <- as.integer(mean(TotalSteps2$Steps))
MeanSteps2
## Median of Steps with NA data taken care of
MedianSteps2 <- as.integer(median(TotalSteps2$Steps))
MedianSteps2
## Creating the histogram of total steps per day, categorized by data set to show impact
hist(TotalSteps2$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Blue")
hist(TotalSteps$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Red", add=T)
legend("topright", c("Imputed Data", "Non-NA Data"), fill=c("Blue","RED") )
jpeg(file = "TotalStepsPerDay",width=400, height=350)
## Creating the histogram of total steps per day, categorized by data set to show impact
hist(TotalSteps2$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Blue")
hist(TotalSteps$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Red", add=T)
legend("topright", c("Imputed Data", "Non-NA Data"), fill=c("Blue","RED") )
dev.off()
## Create new category based on the days of the week
MergeData$DayCategory <- ifelse(MergeData$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
library(lattice)
## Summarize data by interval and type of day
AveStepInterval2 <- ddply(MergeData, .(interval, DayCategory), summarize, Avg = mean(steps))
##Plot data in a panel plot
xyplot(Avg~interval|DayCategory, data=AveStepInterval2, type="l",  layout = c(1,2),
main="Average Steps per Interval Based on Type of Day",
ylab="Average Number of Steps", xlab="Interval")
library(lattice)
## Summarize data by interval and type of day
AveStepInterval2 <- ddply(MergeData, .(interval, DayCategory), summarize, Avg = mean(steps))
##Plot data in a panel plot
jpeg(file = "AveStepsIntervalBasedonType",width=400, height=350)
xyplot(Avg~interval|DayCategory, data=AveStepInterval2, type="l",  layout = c(1,2),
main="Average Steps per Interval Based on Type of Day",
ylab="Average Number of Steps", xlab="Interval")
dev.off()
